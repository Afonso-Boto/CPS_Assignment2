package gol.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import gol.services.GolGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;

@SuppressWarnings("all")
public class InternalGolParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_ID", "RULE_INT", "RULE_STRING", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "'Configuration'", "'{'", "'InitialGrid'", "'EvaluationRules'", "'}'", "'Alive:'", "'('", "','", "')'", "'<'", "'='", "'>'"
    };
    public static final int RULE_STRING=6;
    public static final int RULE_SL_COMMENT=8;
    public static final int T__19=19;
    public static final int T__15=15;
    public static final int T__16=16;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__11=11;
    public static final int T__12=12;
    public static final int T__13=13;
    public static final int T__14=14;
    public static final int EOF=-1;
    public static final int RULE_ID=4;
    public static final int RULE_WS=9;
    public static final int RULE_ANY_OTHER=10;
    public static final int RULE_INT=5;
    public static final int T__22=22;
    public static final int RULE_ML_COMMENT=7;
    public static final int T__20=20;
    public static final int T__21=21;

    // delegates
    // delegators


        public InternalGolParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalGolParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalGolParser.tokenNames; }
    public String getGrammarFileName() { return "InternalGol.g"; }



     	private GolGrammarAccess grammarAccess;

        public InternalGolParser(TokenStream input, GolGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "GameOfLife";
       	}

       	@Override
       	protected GolGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleGameOfLife"
    // InternalGol.g:64:1: entryRuleGameOfLife returns [EObject current=null] : iv_ruleGameOfLife= ruleGameOfLife EOF ;
    public final EObject entryRuleGameOfLife() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGameOfLife = null;


        try {
            // InternalGol.g:64:51: (iv_ruleGameOfLife= ruleGameOfLife EOF )
            // InternalGol.g:65:2: iv_ruleGameOfLife= ruleGameOfLife EOF
            {
             newCompositeNode(grammarAccess.getGameOfLifeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleGameOfLife=ruleGameOfLife();

            state._fsp--;

             current =iv_ruleGameOfLife; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGameOfLife"


    // $ANTLR start "ruleGameOfLife"
    // InternalGol.g:71:1: ruleGameOfLife returns [EObject current=null] : ( (lv_configuration_0_0= ruleConfiguration ) )+ ;
    public final EObject ruleGameOfLife() throws RecognitionException {
        EObject current = null;

        EObject lv_configuration_0_0 = null;



        	enterRule();

        try {
            // InternalGol.g:77:2: ( ( (lv_configuration_0_0= ruleConfiguration ) )+ )
            // InternalGol.g:78:2: ( (lv_configuration_0_0= ruleConfiguration ) )+
            {
            // InternalGol.g:78:2: ( (lv_configuration_0_0= ruleConfiguration ) )+
            int cnt1=0;
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==11) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // InternalGol.g:79:3: (lv_configuration_0_0= ruleConfiguration )
            	    {
            	    // InternalGol.g:79:3: (lv_configuration_0_0= ruleConfiguration )
            	    // InternalGol.g:80:4: lv_configuration_0_0= ruleConfiguration
            	    {

            	    				newCompositeNode(grammarAccess.getGameOfLifeAccess().getConfigurationConfigurationParserRuleCall_0());
            	    			
            	    pushFollow(FOLLOW_3);
            	    lv_configuration_0_0=ruleConfiguration();

            	    state._fsp--;


            	    				if (current==null) {
            	    					current = createModelElementForParent(grammarAccess.getGameOfLifeRule());
            	    				}
            	    				add(
            	    					current,
            	    					"configuration",
            	    					lv_configuration_0_0,
            	    					"gol.Gol.Configuration");
            	    				afterParserOrEnumRuleCall();
            	    			

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt1 >= 1 ) break loop1;
                        EarlyExitException eee =
                            new EarlyExitException(1, input);
                        throw eee;
                }
                cnt1++;
            } while (true);


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGameOfLife"


    // $ANTLR start "entryRuleConfiguration"
    // InternalGol.g:100:1: entryRuleConfiguration returns [EObject current=null] : iv_ruleConfiguration= ruleConfiguration EOF ;
    public final EObject entryRuleConfiguration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConfiguration = null;


        try {
            // InternalGol.g:100:54: (iv_ruleConfiguration= ruleConfiguration EOF )
            // InternalGol.g:101:2: iv_ruleConfiguration= ruleConfiguration EOF
            {
             newCompositeNode(grammarAccess.getConfigurationRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleConfiguration=ruleConfiguration();

            state._fsp--;

             current =iv_ruleConfiguration; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConfiguration"


    // $ANTLR start "ruleConfiguration"
    // InternalGol.g:107:1: ruleConfiguration returns [EObject current=null] : (otherlv_0= 'Configuration' otherlv_1= '{' otherlv_2= 'InitialGrid' ( (lv_initialGrid_3_0= ruleGrid ) ) otherlv_4= 'EvaluationRules' ( (lv_rules_5_0= ruleRules ) ) otherlv_6= '}' ) ;
    public final EObject ruleConfiguration() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_initialGrid_3_0 = null;

        EObject lv_rules_5_0 = null;



        	enterRule();

        try {
            // InternalGol.g:113:2: ( (otherlv_0= 'Configuration' otherlv_1= '{' otherlv_2= 'InitialGrid' ( (lv_initialGrid_3_0= ruleGrid ) ) otherlv_4= 'EvaluationRules' ( (lv_rules_5_0= ruleRules ) ) otherlv_6= '}' ) )
            // InternalGol.g:114:2: (otherlv_0= 'Configuration' otherlv_1= '{' otherlv_2= 'InitialGrid' ( (lv_initialGrid_3_0= ruleGrid ) ) otherlv_4= 'EvaluationRules' ( (lv_rules_5_0= ruleRules ) ) otherlv_6= '}' )
            {
            // InternalGol.g:114:2: (otherlv_0= 'Configuration' otherlv_1= '{' otherlv_2= 'InitialGrid' ( (lv_initialGrid_3_0= ruleGrid ) ) otherlv_4= 'EvaluationRules' ( (lv_rules_5_0= ruleRules ) ) otherlv_6= '}' )
            // InternalGol.g:115:3: otherlv_0= 'Configuration' otherlv_1= '{' otherlv_2= 'InitialGrid' ( (lv_initialGrid_3_0= ruleGrid ) ) otherlv_4= 'EvaluationRules' ( (lv_rules_5_0= ruleRules ) ) otherlv_6= '}'
            {
            otherlv_0=(Token)match(input,11,FOLLOW_4); 

            			newLeafNode(otherlv_0, grammarAccess.getConfigurationAccess().getConfigurationKeyword_0());
            		
            otherlv_1=(Token)match(input,12,FOLLOW_5); 

            			newLeafNode(otherlv_1, grammarAccess.getConfigurationAccess().getLeftCurlyBracketKeyword_1());
            		
            otherlv_2=(Token)match(input,13,FOLLOW_6); 

            			newLeafNode(otherlv_2, grammarAccess.getConfigurationAccess().getInitialGridKeyword_2());
            		
            // InternalGol.g:127:3: ( (lv_initialGrid_3_0= ruleGrid ) )
            // InternalGol.g:128:4: (lv_initialGrid_3_0= ruleGrid )
            {
            // InternalGol.g:128:4: (lv_initialGrid_3_0= ruleGrid )
            // InternalGol.g:129:5: lv_initialGrid_3_0= ruleGrid
            {

            					newCompositeNode(grammarAccess.getConfigurationAccess().getInitialGridGridParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_7);
            lv_initialGrid_3_0=ruleGrid();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getConfigurationRule());
            					}
            					set(
            						current,
            						"initialGrid",
            						lv_initialGrid_3_0,
            						"gol.Gol.Grid");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            otherlv_4=(Token)match(input,14,FOLLOW_4); 

            			newLeafNode(otherlv_4, grammarAccess.getConfigurationAccess().getEvaluationRulesKeyword_4());
            		
            // InternalGol.g:150:3: ( (lv_rules_5_0= ruleRules ) )
            // InternalGol.g:151:4: (lv_rules_5_0= ruleRules )
            {
            // InternalGol.g:151:4: (lv_rules_5_0= ruleRules )
            // InternalGol.g:152:5: lv_rules_5_0= ruleRules
            {

            					newCompositeNode(grammarAccess.getConfigurationAccess().getRulesRulesParserRuleCall_5_0());
            				
            pushFollow(FOLLOW_8);
            lv_rules_5_0=ruleRules();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getConfigurationRule());
            					}
            					set(
            						current,
            						"rules",
            						lv_rules_5_0,
            						"gol.Gol.Rules");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            otherlv_6=(Token)match(input,15,FOLLOW_2); 

            			newLeafNode(otherlv_6, grammarAccess.getConfigurationAccess().getRightCurlyBracketKeyword_6());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConfiguration"


    // $ANTLR start "entryRuleRules"
    // InternalGol.g:177:1: entryRuleRules returns [EObject current=null] : iv_ruleRules= ruleRules EOF ;
    public final EObject entryRuleRules() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRules = null;


        try {
            // InternalGol.g:177:46: (iv_ruleRules= ruleRules EOF )
            // InternalGol.g:178:2: iv_ruleRules= ruleRules EOF
            {
             newCompositeNode(grammarAccess.getRulesRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleRules=ruleRules();

            state._fsp--;

             current =iv_ruleRules; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRules"


    // $ANTLR start "ruleRules"
    // InternalGol.g:184:1: ruleRules returns [EObject current=null] : (otherlv_0= '{' ( (otherlv_1= RULE_ID ) )+ otherlv_2= '}' ) ;
    public final EObject ruleRules() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;


        	enterRule();

        try {
            // InternalGol.g:190:2: ( (otherlv_0= '{' ( (otherlv_1= RULE_ID ) )+ otherlv_2= '}' ) )
            // InternalGol.g:191:2: (otherlv_0= '{' ( (otherlv_1= RULE_ID ) )+ otherlv_2= '}' )
            {
            // InternalGol.g:191:2: (otherlv_0= '{' ( (otherlv_1= RULE_ID ) )+ otherlv_2= '}' )
            // InternalGol.g:192:3: otherlv_0= '{' ( (otherlv_1= RULE_ID ) )+ otherlv_2= '}'
            {
            otherlv_0=(Token)match(input,12,FOLLOW_9); 

            			newLeafNode(otherlv_0, grammarAccess.getRulesAccess().getLeftCurlyBracketKeyword_0());
            		
            // InternalGol.g:196:3: ( (otherlv_1= RULE_ID ) )+
            int cnt2=0;
            loop2:
            do {
                int alt2=2;
                int LA2_0 = input.LA(1);

                if ( (LA2_0==RULE_ID) ) {
                    alt2=1;
                }


                switch (alt2) {
            	case 1 :
            	    // InternalGol.g:197:4: (otherlv_1= RULE_ID )
            	    {
            	    // InternalGol.g:197:4: (otherlv_1= RULE_ID )
            	    // InternalGol.g:198:5: otherlv_1= RULE_ID
            	    {

            	    					if (current==null) {
            	    						current = createModelElement(grammarAccess.getRulesRule());
            	    					}
            	    				
            	    otherlv_1=(Token)match(input,RULE_ID,FOLLOW_10); 

            	    					newLeafNode(otherlv_1, grammarAccess.getRulesAccess().getRuleRuleCrossReference_1_0());
            	    				

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt2 >= 1 ) break loop2;
                        EarlyExitException eee =
                            new EarlyExitException(2, input);
                        throw eee;
                }
                cnt2++;
            } while (true);

            otherlv_2=(Token)match(input,15,FOLLOW_2); 

            			newLeafNode(otherlv_2, grammarAccess.getRulesAccess().getRightCurlyBracketKeyword_2());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRules"


    // $ANTLR start "entryRuleGrid"
    // InternalGol.g:217:1: entryRuleGrid returns [EObject current=null] : iv_ruleGrid= ruleGrid EOF ;
    public final EObject entryRuleGrid() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGrid = null;


        try {
            // InternalGol.g:217:45: (iv_ruleGrid= ruleGrid EOF )
            // InternalGol.g:218:2: iv_ruleGrid= ruleGrid EOF
            {
             newCompositeNode(grammarAccess.getGridRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleGrid=ruleGrid();

            state._fsp--;

             current =iv_ruleGrid; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGrid"


    // $ANTLR start "ruleGrid"
    // InternalGol.g:224:1: ruleGrid returns [EObject current=null] : (otherlv_0= 'Alive:' otherlv_1= '{' ( (lv_alive_2_0= ruleCoordinate ) )+ otherlv_3= '}' ) ;
    public final EObject ruleGrid() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_alive_2_0 = null;



        	enterRule();

        try {
            // InternalGol.g:230:2: ( (otherlv_0= 'Alive:' otherlv_1= '{' ( (lv_alive_2_0= ruleCoordinate ) )+ otherlv_3= '}' ) )
            // InternalGol.g:231:2: (otherlv_0= 'Alive:' otherlv_1= '{' ( (lv_alive_2_0= ruleCoordinate ) )+ otherlv_3= '}' )
            {
            // InternalGol.g:231:2: (otherlv_0= 'Alive:' otherlv_1= '{' ( (lv_alive_2_0= ruleCoordinate ) )+ otherlv_3= '}' )
            // InternalGol.g:232:3: otherlv_0= 'Alive:' otherlv_1= '{' ( (lv_alive_2_0= ruleCoordinate ) )+ otherlv_3= '}'
            {
            otherlv_0=(Token)match(input,16,FOLLOW_4); 

            			newLeafNode(otherlv_0, grammarAccess.getGridAccess().getAliveKeyword_0());
            		
            otherlv_1=(Token)match(input,12,FOLLOW_11); 

            			newLeafNode(otherlv_1, grammarAccess.getGridAccess().getLeftCurlyBracketKeyword_1());
            		
            // InternalGol.g:240:3: ( (lv_alive_2_0= ruleCoordinate ) )+
            int cnt3=0;
            loop3:
            do {
                int alt3=2;
                int LA3_0 = input.LA(1);

                if ( (LA3_0==17) ) {
                    alt3=1;
                }


                switch (alt3) {
            	case 1 :
            	    // InternalGol.g:241:4: (lv_alive_2_0= ruleCoordinate )
            	    {
            	    // InternalGol.g:241:4: (lv_alive_2_0= ruleCoordinate )
            	    // InternalGol.g:242:5: lv_alive_2_0= ruleCoordinate
            	    {

            	    					newCompositeNode(grammarAccess.getGridAccess().getAliveCoordinateParserRuleCall_2_0());
            	    				
            	    pushFollow(FOLLOW_12);
            	    lv_alive_2_0=ruleCoordinate();

            	    state._fsp--;


            	    					if (current==null) {
            	    						current = createModelElementForParent(grammarAccess.getGridRule());
            	    					}
            	    					add(
            	    						current,
            	    						"alive",
            	    						lv_alive_2_0,
            	    						"gol.Gol.Coordinate");
            	    					afterParserOrEnumRuleCall();
            	    				

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt3 >= 1 ) break loop3;
                        EarlyExitException eee =
                            new EarlyExitException(3, input);
                        throw eee;
                }
                cnt3++;
            } while (true);

            otherlv_3=(Token)match(input,15,FOLLOW_2); 

            			newLeafNode(otherlv_3, grammarAccess.getGridAccess().getRightCurlyBracketKeyword_3());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGrid"


    // $ANTLR start "entryRuleCoordinate"
    // InternalGol.g:267:1: entryRuleCoordinate returns [EObject current=null] : iv_ruleCoordinate= ruleCoordinate EOF ;
    public final EObject entryRuleCoordinate() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCoordinate = null;


        try {
            // InternalGol.g:267:51: (iv_ruleCoordinate= ruleCoordinate EOF )
            // InternalGol.g:268:2: iv_ruleCoordinate= ruleCoordinate EOF
            {
             newCompositeNode(grammarAccess.getCoordinateRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleCoordinate=ruleCoordinate();

            state._fsp--;

             current =iv_ruleCoordinate; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCoordinate"


    // $ANTLR start "ruleCoordinate"
    // InternalGol.g:274:1: ruleCoordinate returns [EObject current=null] : (otherlv_0= '(' ( (lv_x_1_0= RULE_INT ) ) otherlv_2= ',' ( (lv_y_3_0= RULE_INT ) ) otherlv_4= ')' ) ;
    public final EObject ruleCoordinate() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_x_1_0=null;
        Token otherlv_2=null;
        Token lv_y_3_0=null;
        Token otherlv_4=null;


        	enterRule();

        try {
            // InternalGol.g:280:2: ( (otherlv_0= '(' ( (lv_x_1_0= RULE_INT ) ) otherlv_2= ',' ( (lv_y_3_0= RULE_INT ) ) otherlv_4= ')' ) )
            // InternalGol.g:281:2: (otherlv_0= '(' ( (lv_x_1_0= RULE_INT ) ) otherlv_2= ',' ( (lv_y_3_0= RULE_INT ) ) otherlv_4= ')' )
            {
            // InternalGol.g:281:2: (otherlv_0= '(' ( (lv_x_1_0= RULE_INT ) ) otherlv_2= ',' ( (lv_y_3_0= RULE_INT ) ) otherlv_4= ')' )
            // InternalGol.g:282:3: otherlv_0= '(' ( (lv_x_1_0= RULE_INT ) ) otherlv_2= ',' ( (lv_y_3_0= RULE_INT ) ) otherlv_4= ')'
            {
            otherlv_0=(Token)match(input,17,FOLLOW_13); 

            			newLeafNode(otherlv_0, grammarAccess.getCoordinateAccess().getLeftParenthesisKeyword_0());
            		
            // InternalGol.g:286:3: ( (lv_x_1_0= RULE_INT ) )
            // InternalGol.g:287:4: (lv_x_1_0= RULE_INT )
            {
            // InternalGol.g:287:4: (lv_x_1_0= RULE_INT )
            // InternalGol.g:288:5: lv_x_1_0= RULE_INT
            {
            lv_x_1_0=(Token)match(input,RULE_INT,FOLLOW_14); 

            					newLeafNode(lv_x_1_0, grammarAccess.getCoordinateAccess().getXINTTerminalRuleCall_1_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getCoordinateRule());
            					}
            					setWithLastConsumed(
            						current,
            						"x",
            						lv_x_1_0,
            						"org.eclipse.xtext.common.Terminals.INT");
            				

            }


            }

            otherlv_2=(Token)match(input,18,FOLLOW_13); 

            			newLeafNode(otherlv_2, grammarAccess.getCoordinateAccess().getCommaKeyword_2());
            		
            // InternalGol.g:308:3: ( (lv_y_3_0= RULE_INT ) )
            // InternalGol.g:309:4: (lv_y_3_0= RULE_INT )
            {
            // InternalGol.g:309:4: (lv_y_3_0= RULE_INT )
            // InternalGol.g:310:5: lv_y_3_0= RULE_INT
            {
            lv_y_3_0=(Token)match(input,RULE_INT,FOLLOW_15); 

            					newLeafNode(lv_y_3_0, grammarAccess.getCoordinateAccess().getYINTTerminalRuleCall_3_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getCoordinateRule());
            					}
            					setWithLastConsumed(
            						current,
            						"y",
            						lv_y_3_0,
            						"org.eclipse.xtext.common.Terminals.INT");
            				

            }


            }

            otherlv_4=(Token)match(input,19,FOLLOW_2); 

            			newLeafNode(otherlv_4, grammarAccess.getCoordinateAccess().getRightParenthesisKeyword_4());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCoordinate"


    // $ANTLR start "entryRuleCondition"
    // InternalGol.g:334:1: entryRuleCondition returns [EObject current=null] : iv_ruleCondition= ruleCondition EOF ;
    public final EObject entryRuleCondition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCondition = null;


        try {
            // InternalGol.g:334:50: (iv_ruleCondition= ruleCondition EOF )
            // InternalGol.g:335:2: iv_ruleCondition= ruleCondition EOF
            {
             newCompositeNode(grammarAccess.getConditionRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleCondition=ruleCondition();

            state._fsp--;

             current =iv_ruleCondition; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCondition"


    // $ANTLR start "ruleCondition"
    // InternalGol.g:341:1: ruleCondition returns [EObject current=null] : ( (otherlv_0= '<' ( (lv_value_1_0= RULE_INT ) ) ) | (otherlv_2= '=' ( (lv_value_3_0= RULE_INT ) ) ) | (otherlv_4= '>' ( (lv_value_5_0= RULE_INT ) ) ) ) ;
    public final EObject ruleCondition() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_value_1_0=null;
        Token otherlv_2=null;
        Token lv_value_3_0=null;
        Token otherlv_4=null;
        Token lv_value_5_0=null;


        	enterRule();

        try {
            // InternalGol.g:347:2: ( ( (otherlv_0= '<' ( (lv_value_1_0= RULE_INT ) ) ) | (otherlv_2= '=' ( (lv_value_3_0= RULE_INT ) ) ) | (otherlv_4= '>' ( (lv_value_5_0= RULE_INT ) ) ) ) )
            // InternalGol.g:348:2: ( (otherlv_0= '<' ( (lv_value_1_0= RULE_INT ) ) ) | (otherlv_2= '=' ( (lv_value_3_0= RULE_INT ) ) ) | (otherlv_4= '>' ( (lv_value_5_0= RULE_INT ) ) ) )
            {
            // InternalGol.g:348:2: ( (otherlv_0= '<' ( (lv_value_1_0= RULE_INT ) ) ) | (otherlv_2= '=' ( (lv_value_3_0= RULE_INT ) ) ) | (otherlv_4= '>' ( (lv_value_5_0= RULE_INT ) ) ) )
            int alt4=3;
            switch ( input.LA(1) ) {
            case 20:
                {
                alt4=1;
                }
                break;
            case 21:
                {
                alt4=2;
                }
                break;
            case 22:
                {
                alt4=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }

            switch (alt4) {
                case 1 :
                    // InternalGol.g:349:3: (otherlv_0= '<' ( (lv_value_1_0= RULE_INT ) ) )
                    {
                    // InternalGol.g:349:3: (otherlv_0= '<' ( (lv_value_1_0= RULE_INT ) ) )
                    // InternalGol.g:350:4: otherlv_0= '<' ( (lv_value_1_0= RULE_INT ) )
                    {
                    otherlv_0=(Token)match(input,20,FOLLOW_13); 

                    				newLeafNode(otherlv_0, grammarAccess.getConditionAccess().getLessThanSignKeyword_0_0());
                    			
                    // InternalGol.g:354:4: ( (lv_value_1_0= RULE_INT ) )
                    // InternalGol.g:355:5: (lv_value_1_0= RULE_INT )
                    {
                    // InternalGol.g:355:5: (lv_value_1_0= RULE_INT )
                    // InternalGol.g:356:6: lv_value_1_0= RULE_INT
                    {
                    lv_value_1_0=(Token)match(input,RULE_INT,FOLLOW_2); 

                    						newLeafNode(lv_value_1_0, grammarAccess.getConditionAccess().getValueINTTerminalRuleCall_0_1_0());
                    					

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getConditionRule());
                    						}
                    						setWithLastConsumed(
                    							current,
                    							"value",
                    							lv_value_1_0,
                    							"org.eclipse.xtext.common.Terminals.INT");
                    					

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGol.g:374:3: (otherlv_2= '=' ( (lv_value_3_0= RULE_INT ) ) )
                    {
                    // InternalGol.g:374:3: (otherlv_2= '=' ( (lv_value_3_0= RULE_INT ) ) )
                    // InternalGol.g:375:4: otherlv_2= '=' ( (lv_value_3_0= RULE_INT ) )
                    {
                    otherlv_2=(Token)match(input,21,FOLLOW_13); 

                    				newLeafNode(otherlv_2, grammarAccess.getConditionAccess().getEqualsSignKeyword_1_0());
                    			
                    // InternalGol.g:379:4: ( (lv_value_3_0= RULE_INT ) )
                    // InternalGol.g:380:5: (lv_value_3_0= RULE_INT )
                    {
                    // InternalGol.g:380:5: (lv_value_3_0= RULE_INT )
                    // InternalGol.g:381:6: lv_value_3_0= RULE_INT
                    {
                    lv_value_3_0=(Token)match(input,RULE_INT,FOLLOW_2); 

                    						newLeafNode(lv_value_3_0, grammarAccess.getConditionAccess().getValueINTTerminalRuleCall_1_1_0());
                    					

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getConditionRule());
                    						}
                    						setWithLastConsumed(
                    							current,
                    							"value",
                    							lv_value_3_0,
                    							"org.eclipse.xtext.common.Terminals.INT");
                    					

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGol.g:399:3: (otherlv_4= '>' ( (lv_value_5_0= RULE_INT ) ) )
                    {
                    // InternalGol.g:399:3: (otherlv_4= '>' ( (lv_value_5_0= RULE_INT ) ) )
                    // InternalGol.g:400:4: otherlv_4= '>' ( (lv_value_5_0= RULE_INT ) )
                    {
                    otherlv_4=(Token)match(input,22,FOLLOW_13); 

                    				newLeafNode(otherlv_4, grammarAccess.getConditionAccess().getGreaterThanSignKeyword_2_0());
                    			
                    // InternalGol.g:404:4: ( (lv_value_5_0= RULE_INT ) )
                    // InternalGol.g:405:5: (lv_value_5_0= RULE_INT )
                    {
                    // InternalGol.g:405:5: (lv_value_5_0= RULE_INT )
                    // InternalGol.g:406:6: lv_value_5_0= RULE_INT
                    {
                    lv_value_5_0=(Token)match(input,RULE_INT,FOLLOW_2); 

                    						newLeafNode(lv_value_5_0, grammarAccess.getConditionAccess().getValueINTTerminalRuleCall_2_1_0());
                    					

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getConditionRule());
                    						}
                    						setWithLastConsumed(
                    							current,
                    							"value",
                    							lv_value_5_0,
                    							"org.eclipse.xtext.common.Terminals.INT");
                    					

                    }


                    }


                    }


                    }
                    break;

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCondition"

    // Delegated rules


 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000000000802L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000008010L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000000028000L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000000080000L});

}