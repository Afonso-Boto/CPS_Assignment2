package gol.generator

import gol.gol.GameOfLife
import gol.gol.Configuration

class BoardGenerator {
	def static baseCode(GameOfLife root)'''
		package generated;
		
		import java.awt.Point;
		import java.util.ArrayList;
		
		public class RulesOfLife {
			public static ArrayList<Point> initGameBoard() {
		    	ArrayList<Point> points = new ArrayList<>();
				«FOR conf : root.configuration»
					«addingPoints(conf)»
				«ENDFOR»
				return points;
			}
			
			«computeSurvivors(root)»
			
			
		}
	'''
	
	def static addingPoints(Configuration conf)'''
		«FOR coord : Auxiliary.getCoords(conf.initialGrid)»
			points.add(new Point(«coord.x» , «coord.y»));
		«ENDFOR»
	'''
	
	def static computeSurvivors(GameOfLife root)'''
		public static void computeSurvivors(boolean[][] gameBoard, ArrayList<Point> survivingCells) {
			for (int i=1; i<gameBoard.length-1; i++) {
				for (int j=1; j<gameBoard[0].length-1; j++) {
		                int surrounding = 0;
		                if (gameBoard[i-1][j-1]) { surrounding++; }
		                if (gameBoard[i-1][j])   { surrounding++; }
		                if (gameBoard[i-1][j+1]) { surrounding++; }
		                if (gameBoard[i][j-1])   { surrounding++; }
		                if (gameBoard[i][j+1])   { surrounding++; }
		                if (gameBoard[i+1][j-1]) { surrounding++; }
		                if (gameBoard[i+1][j])   { surrounding++; }
		                if (gameBoard[i+1][j+1]) { surrounding++; }
			                
	                «FOR conf : root.configuration »
	                	«FOR r : conf.rules.rule »
	                		«FOR s : r.getSurvive() AFTER "{
                				survivingCells.add(new Point(i-1,j-1));} " »
	                		if ((gameBoard[i][j]) && (surronding «s.sign» «s.value» ))
	                		«ENDFOR»
	                		«FOR reb : r.getReborn() AFTER "{
                				survivingCells.add(new Point(i-1,j-1));} "»
	                		if ((gameBoard[i][j]) && (surronding «reb.sign» «reb.value» ))
	                		«ENDFOR»
	                	«ENDFOR»
	                «ENDFOR»
				}
			}
		}
			          
	'''
	
	
	
}