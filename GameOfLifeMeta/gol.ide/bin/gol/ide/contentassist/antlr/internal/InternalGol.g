/*
 * generated by Xtext 2.32.0
 */
grammar InternalGol;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package gol.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package gol.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import gol.services.GolGrammarAccess;

}
@parser::members {
	private GolGrammarAccess grammarAccess;

	public void setGrammarAccess(GolGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleGameOfLife
entryRuleGameOfLife
:
{ before(grammarAccess.getGameOfLifeRule()); }
	 ruleGameOfLife
{ after(grammarAccess.getGameOfLifeRule()); } 
	 EOF 
;

// Rule GameOfLife
ruleGameOfLife 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGameOfLifeAccess().getGroup()); }
		(rule__GameOfLife__Group__0)
		{ after(grammarAccess.getGameOfLifeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRules
entryRuleRules
:
{ before(grammarAccess.getRulesRule()); }
	 ruleRules
{ after(grammarAccess.getRulesRule()); } 
	 EOF 
;

// Rule Rules
ruleRules 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getRulesAccess().getRuleAssignment()); }
			(rule__Rules__RuleAssignment)
			{ after(grammarAccess.getRulesAccess().getRuleAssignment()); }
		)
		(
			{ before(grammarAccess.getRulesAccess().getRuleAssignment()); }
			(rule__Rules__RuleAssignment)*
			{ after(grammarAccess.getRulesAccess().getRuleAssignment()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRule
entryRuleRule
:
{ before(grammarAccess.getRuleRule()); }
	 ruleRule
{ after(grammarAccess.getRuleRule()); } 
	 EOF 
;

// Rule Rule
ruleRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRuleAccess().getAlternatives()); }
		(rule__Rule__Alternatives)
		{ after(grammarAccess.getRuleAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGrid
entryRuleGrid
:
{ before(grammarAccess.getGridRule()); }
	 ruleGrid
{ after(grammarAccess.getGridRule()); } 
	 EOF 
;

// Rule Grid
ruleGrid 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGridAccess().getGroup()); }
		(rule__Grid__Group__0)
		{ after(grammarAccess.getGridAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCoordinate
entryRuleCoordinate
:
{ before(grammarAccess.getCoordinateRule()); }
	 ruleCoordinate
{ after(grammarAccess.getCoordinateRule()); } 
	 EOF 
;

// Rule Coordinate
ruleCoordinate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCoordinateAccess().getGroup()); }
		(rule__Coordinate__Group__0)
		{ after(grammarAccess.getCoordinateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCondition
entryRuleCondition
:
{ before(grammarAccess.getConditionRule()); }
	 ruleCondition
{ after(grammarAccess.getConditionRule()); } 
	 EOF 
;

// Rule Condition
ruleCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionAccess().getGroup()); }
		(rule__Condition__Group__0)
		{ after(grammarAccess.getConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ConditionSign
ruleConditionSign
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionSignAccess().getAlternatives()); }
		(rule__ConditionSign__Alternatives)
		{ after(grammarAccess.getConditionSignAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getGroup_0()); }
		(rule__Rule__Group_0__0)
		{ after(grammarAccess.getRuleAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getRuleAccess().getGroup_1()); }
		(rule__Rule__Group_1__0)
		{ after(grammarAccess.getRuleAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionSign__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionSignAccess().getLESS_THANEnumLiteralDeclaration_0()); }
		('<')
		{ after(grammarAccess.getConditionSignAccess().getLESS_THANEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getConditionSignAccess().getEQUALS_TOEnumLiteralDeclaration_1()); }
		('==')
		{ after(grammarAccess.getConditionSignAccess().getEQUALS_TOEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getConditionSignAccess().getGREATER_THANEnumLiteralDeclaration_2()); }
		('>')
		{ after(grammarAccess.getConditionSignAccess().getGREATER_THANEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GameOfLife__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GameOfLife__Group__0__Impl
	rule__GameOfLife__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GameOfLife__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGameOfLifeAccess().getConfigurationKeyword_0()); }
	'Configuration'
	{ after(grammarAccess.getGameOfLifeAccess().getConfigurationKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GameOfLife__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GameOfLife__Group__1__Impl
	rule__GameOfLife__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GameOfLife__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGameOfLifeAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getGameOfLifeAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GameOfLife__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GameOfLife__Group__2__Impl
	rule__GameOfLife__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GameOfLife__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGameOfLifeAccess().getInitialGridKeyword_2()); }
	'InitialGrid'
	{ after(grammarAccess.getGameOfLifeAccess().getInitialGridKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GameOfLife__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GameOfLife__Group__3__Impl
	rule__GameOfLife__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GameOfLife__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGameOfLifeAccess().getInitialGridAssignment_3()); }
	(rule__GameOfLife__InitialGridAssignment_3)
	{ after(grammarAccess.getGameOfLifeAccess().getInitialGridAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GameOfLife__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GameOfLife__Group__4__Impl
	rule__GameOfLife__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__GameOfLife__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGameOfLifeAccess().getEvaluationRulesKeyword_4()); }
	'EvaluationRules'
	{ after(grammarAccess.getGameOfLifeAccess().getEvaluationRulesKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GameOfLife__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GameOfLife__Group__5__Impl
	rule__GameOfLife__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__GameOfLife__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGameOfLifeAccess().getRulesAssignment_5()); }
	(rule__GameOfLife__RulesAssignment_5)
	{ after(grammarAccess.getGameOfLifeAccess().getRulesAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GameOfLife__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GameOfLife__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GameOfLife__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGameOfLifeAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getGameOfLifeAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group_0__0__Impl
	rule__Rule__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getSurviveKeyword_0_0()); }
	'Survive'
	{ after(grammarAccess.getRuleAccess().getSurviveKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getRuleAccess().getSurviveAssignment_0_1()); }
		(rule__Rule__SurviveAssignment_0_1)
		{ after(grammarAccess.getRuleAccess().getSurviveAssignment_0_1()); }
	)
	(
		{ before(grammarAccess.getRuleAccess().getSurviveAssignment_0_1()); }
		(rule__Rule__SurviveAssignment_0_1)*
		{ after(grammarAccess.getRuleAccess().getSurviveAssignment_0_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group_1__0__Impl
	rule__Rule__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getRebornKeyword_1_0()); }
	'Reborn'
	{ after(grammarAccess.getRuleAccess().getRebornKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getRuleAccess().getRebornAssignment_1_1()); }
		(rule__Rule__RebornAssignment_1_1)
		{ after(grammarAccess.getRuleAccess().getRebornAssignment_1_1()); }
	)
	(
		{ before(grammarAccess.getRuleAccess().getRebornAssignment_1_1()); }
		(rule__Rule__RebornAssignment_1_1)*
		{ after(grammarAccess.getRuleAccess().getRebornAssignment_1_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Grid__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Grid__Group__0__Impl
	rule__Grid__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Grid__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGridAccess().getAliveKeyword_0()); }
	'Alive:'
	{ after(grammarAccess.getGridAccess().getAliveKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Grid__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Grid__Group__1__Impl
	rule__Grid__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Grid__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGridAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getGridAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Grid__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Grid__Group__2__Impl
	rule__Grid__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Grid__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getGridAccess().getAliveAssignment_2()); }
		(rule__Grid__AliveAssignment_2)
		{ after(grammarAccess.getGridAccess().getAliveAssignment_2()); }
	)
	(
		{ before(grammarAccess.getGridAccess().getAliveAssignment_2()); }
		(rule__Grid__AliveAssignment_2)*
		{ after(grammarAccess.getGridAccess().getAliveAssignment_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Grid__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Grid__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Grid__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGridAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getGridAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Coordinate__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Coordinate__Group__0__Impl
	rule__Coordinate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoordinateAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getCoordinateAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Coordinate__Group__1__Impl
	rule__Coordinate__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoordinateAccess().getXAssignment_1()); }
	(rule__Coordinate__XAssignment_1)
	{ after(grammarAccess.getCoordinateAccess().getXAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Coordinate__Group__2__Impl
	rule__Coordinate__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoordinateAccess().getCommaKeyword_2()); }
	','
	{ after(grammarAccess.getCoordinateAccess().getCommaKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Coordinate__Group__3__Impl
	rule__Coordinate__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoordinateAccess().getYAssignment_3()); }
	(rule__Coordinate__YAssignment_3)
	{ after(grammarAccess.getCoordinateAccess().getYAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Coordinate__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoordinateAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getCoordinateAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__0__Impl
	rule__Condition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getSignAssignment_0()); }
	(rule__Condition__SignAssignment_0)
	{ after(grammarAccess.getConditionAccess().getSignAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getValueAssignment_1()); }
	(rule__Condition__ValueAssignment_1)
	{ after(grammarAccess.getConditionAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GameOfLife__InitialGridAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGameOfLifeAccess().getInitialGridGridParserRuleCall_3_0()); }
		ruleGrid
		{ after(grammarAccess.getGameOfLifeAccess().getInitialGridGridParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GameOfLife__RulesAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGameOfLifeAccess().getRulesRulesParserRuleCall_5_0()); }
		ruleRules
		{ after(grammarAccess.getGameOfLifeAccess().getRulesRulesParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rules__RuleAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRulesAccess().getRuleRuleParserRuleCall_0()); }
		ruleRule
		{ after(grammarAccess.getRulesAccess().getRuleRuleParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__SurviveAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getSurviveConditionParserRuleCall_0_1_0()); }
		ruleCondition
		{ after(grammarAccess.getRuleAccess().getSurviveConditionParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__RebornAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getRebornConditionParserRuleCall_1_1_0()); }
		ruleCondition
		{ after(grammarAccess.getRuleAccess().getRebornConditionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Grid__AliveAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGridAccess().getAliveCoordinateParserRuleCall_2_0()); }
		ruleCoordinate
		{ after(grammarAccess.getGridAccess().getAliveCoordinateParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate__XAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCoordinateAccess().getXINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getCoordinateAccess().getXINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate__YAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCoordinateAccess().getYINTTerminalRuleCall_3_0()); }
		RULE_INT
		{ after(grammarAccess.getCoordinateAccess().getYINTTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__SignAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getSignConditionSignEnumRuleCall_0_0()); }
		ruleConditionSign
		{ after(grammarAccess.getConditionAccess().getSignConditionSignEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getValueINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getConditionAccess().getValueINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
