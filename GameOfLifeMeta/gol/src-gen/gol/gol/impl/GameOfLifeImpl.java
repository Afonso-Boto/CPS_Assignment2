/**
 * generated by Xtext 2.32.0
 */
package gol.gol.impl;

import gol.gol.GameOfLife;
import gol.gol.GolPackage;
import gol.gol.Grid;
import gol.gol.Rules;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Game Of Life</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link gol.gol.impl.GameOfLifeImpl#getInitialGrid <em>Initial Grid</em>}</li>
 *   <li>{@link gol.gol.impl.GameOfLifeImpl#getRules <em>Rules</em>}</li>
 * </ul>
 *
 * @generated
 */
public class GameOfLifeImpl extends MinimalEObjectImpl.Container implements GameOfLife
{
  /**
   * The cached value of the '{@link #getInitialGrid() <em>Initial Grid</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInitialGrid()
   * @generated
   * @ordered
   */
  protected Grid initialGrid;

  /**
   * The cached value of the '{@link #getRules() <em>Rules</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRules()
   * @generated
   * @ordered
   */
  protected Rules rules;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected GameOfLifeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GolPackage.Literals.GAME_OF_LIFE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Grid getInitialGrid()
  {
    return initialGrid;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetInitialGrid(Grid newInitialGrid, NotificationChain msgs)
  {
    Grid oldInitialGrid = initialGrid;
    initialGrid = newInitialGrid;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GolPackage.GAME_OF_LIFE__INITIAL_GRID, oldInitialGrid, newInitialGrid);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setInitialGrid(Grid newInitialGrid)
  {
    if (newInitialGrid != initialGrid)
    {
      NotificationChain msgs = null;
      if (initialGrid != null)
        msgs = ((InternalEObject)initialGrid).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GolPackage.GAME_OF_LIFE__INITIAL_GRID, null, msgs);
      if (newInitialGrid != null)
        msgs = ((InternalEObject)newInitialGrid).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GolPackage.GAME_OF_LIFE__INITIAL_GRID, null, msgs);
      msgs = basicSetInitialGrid(newInitialGrid, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GolPackage.GAME_OF_LIFE__INITIAL_GRID, newInitialGrid, newInitialGrid));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Rules getRules()
  {
    return rules;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRules(Rules newRules, NotificationChain msgs)
  {
    Rules oldRules = rules;
    rules = newRules;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GolPackage.GAME_OF_LIFE__RULES, oldRules, newRules);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRules(Rules newRules)
  {
    if (newRules != rules)
    {
      NotificationChain msgs = null;
      if (rules != null)
        msgs = ((InternalEObject)rules).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GolPackage.GAME_OF_LIFE__RULES, null, msgs);
      if (newRules != null)
        msgs = ((InternalEObject)newRules).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GolPackage.GAME_OF_LIFE__RULES, null, msgs);
      msgs = basicSetRules(newRules, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GolPackage.GAME_OF_LIFE__RULES, newRules, newRules));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case GolPackage.GAME_OF_LIFE__INITIAL_GRID:
        return basicSetInitialGrid(null, msgs);
      case GolPackage.GAME_OF_LIFE__RULES:
        return basicSetRules(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GolPackage.GAME_OF_LIFE__INITIAL_GRID:
        return getInitialGrid();
      case GolPackage.GAME_OF_LIFE__RULES:
        return getRules();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GolPackage.GAME_OF_LIFE__INITIAL_GRID:
        setInitialGrid((Grid)newValue);
        return;
      case GolPackage.GAME_OF_LIFE__RULES:
        setRules((Rules)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GolPackage.GAME_OF_LIFE__INITIAL_GRID:
        setInitialGrid((Grid)null);
        return;
      case GolPackage.GAME_OF_LIFE__RULES:
        setRules((Rules)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GolPackage.GAME_OF_LIFE__INITIAL_GRID:
        return initialGrid != null;
      case GolPackage.GAME_OF_LIFE__RULES:
        return rules != null;
    }
    return super.eIsSet(featureID);
  }

} //GameOfLifeImpl
